// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

public partial class StringUtilsTest
{
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void NormalizeSpacesThrowsArgumentNullException975()
{
    string s;
    s = this.NormalizeSpaces((string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
public void NormalizeSpaces578()
{
    string s;
    s = this.NormalizeSpaces("");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
public void NormalizeSpaces850()
{
    string s;
    s = this.NormalizeSpaces("Q");
    Assert.AreEqual<string>("Q", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
public void NormalizeSpaces56()
{
    string s;
    s = this.NormalizeSpaces(" ");
    Assert.AreEqual<string>(" ", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
public void NormalizeSpaces15()
{
    string s;
    s = this.NormalizeSpaces("1 ");
    Assert.AreEqual<string>("1 ", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
public void NormalizeSpaces301()
{
    string s;
    s = this.NormalizeSpaces("11 ");
    Assert.AreEqual<string>("11 ", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
public void NormalizeSpaces159()
{
    string s;
    s = this.NormalizeSpaces("1q1 ");
    Assert.AreEqual<string>("1q1 ", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
public void NormalizeSpaces236()
{
    string s;
    s = this.NormalizeSpaces("111111111111111111111   ");
    Assert.AreEqual<string>("111111111111111111111 ", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::StringUtilsTest))]
[Ignore]
[PexDescription("the test state was: duplicate path")]
public void NormalizeSpaces827()
{
    string s;
    s = this.NormalizeSpaces("11111111111q111111111111q111111111111\u8031");
    Assert.AreEqual<string>("11111111111q111111111111q111111111111\u8031", s);
}
}

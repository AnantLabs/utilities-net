// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

public partial class MathExTest
{
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void Gcd05ThrowsArgumentNullException661()
{
    ushort w;
    w = this.Gcd05((ushort[])null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void Gcd05ThrowsInvalidOperationException869()
{
    ushort w;
    ushort[] ws = new ushort[0];
    w = this.Gcd05(ws);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void Gcd05ThrowsInvalidOperationException872()
{
    ushort w;
    ushort[] ws = new ushort[1];
    w = this.Gcd05(ws);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
public void Gcd05381()
{
    ushort w;
    ushort[] ws = new ushort[1];
    ws[0] = (ushort)33;
    w = this.Gcd05(ws);
    Assert.AreEqual<ushort>((ushort)33, w);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
[ExpectedException(typeof(InvalidOperationException))]
public void Gcd05ThrowsInvalidOperationException209()
{
    ushort w;
    ushort[] ws = new ushort[2];
    w = this.Gcd05(ws);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
public void Gcd05723()
{
    ushort w;
    ushort[] ws = new ushort[2];
    ws[1] = (ushort)1;
    w = this.Gcd05(ws);
    Assert.AreEqual<ushort>((ushort)1, w);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
public void Gcd05989()
{
    ushort w;
    ushort[] ws = new ushort[2];
    ws[0] = (ushort)1;
    w = this.Gcd05(ws);
    Assert.AreEqual<ushort>((ushort)1, w);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
public void Gcd05991()
{
    ushort w;
    ushort[] ws = new ushort[2];
    ws[0] = (ushort)66;
    ws[1] = (ushort)53;
    w = this.Gcd05(ws);
    Assert.AreEqual<ushort>((ushort)1, w);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
public void Gcd05161()
{
    ushort w;
    ushort[] ws = new ushort[3];
    ws[1] = (ushort)1;
    w = this.Gcd05(ws);
    Assert.AreEqual<ushort>((ushort)1, w);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
public void Gcd05315()
{
    ushort w;
    ushort[] ws = new ushort[3];
    ws[0] = (ushort)1;
    w = this.Gcd05(ws);
    Assert.AreEqual<ushort>((ushort)1, w);
}
[TestMethod]
[PexGeneratedBy(typeof(global::MathExTest))]
public void Gcd05510()
{
    ushort w;
    ushort[] ws = new ushort[3];
    ws[0] = (ushort)64;
    ws[1] = (ushort)64;
    ws[2] = (ushort)32;
    w = this.Gcd05(ws);
    Assert.AreEqual<ushort>((ushort)32, w);
}
}

// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

public partial class GenericEnumerableExtensionsTest
{
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void Aggregate01ThrowsArgumentNullException674()
{
    string s;
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)null, (Func<int, string>)null, 
             (string)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void Aggregate01ThrowsArgumentNullException766()
{
    string s;
    int[] ints = new int[0];
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)ints, (Func<int, string>)null, 
             (string)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void Aggregate01ThrowsArgumentNullException341()
{
    string s;
    int[] ints = new int[0];
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)ints, (Func<int, string>)null, "", (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void Aggregate01ThrowsArgumentNullException747()
{
    string s;
    int[] ints = new int[0];
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)ints, (Func<int, string>)null, "", "");
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void Aggregate01287()
{
    object o;
    string s;
    o = FuncFactory.Create(0);
    int[] ints = new int[0];
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)ints, (Func<int, string>)o, "", "");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void Aggregate01778()
{
    object o;
    string s;
    o = FuncFactory.Create(0);
    int[] ints = new int[1];
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)ints, (Func<int, string>)o, "", "");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void Aggregate01763()
{
    object o;
    string s;
    o = FuncFactory.Create(0);
    int[] ints = new int[1];
    ints[0] = 1;
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)ints, (Func<int, string>)o, "", "");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void Aggregate014()
{
    object o;
    string s;
    o = FuncFactory.Create(int.MaxValue);
    int[] ints = new int[2];
    ints[0] = int.MaxValue;
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)ints, (Func<int, string>)o, "", "");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void Aggregate01258()
{
    object o;
    string s;
    o = FuncFactory.Create(int.MaxValue);
    int[] ints = new int[5];
    ints[0] = int.MaxValue;
    s = this.Aggregate01<int, string>
            ((IEnumerable<int>)ints, (Func<int, string>)o, "", "");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void AggregateThrowsArgumentNullException710()
{
    string s;
    s =
      this.Aggregate<string>((IEnumerable<string>)null, (string)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void AggregateThrowsArgumentNullException286()
{
    string s;
    string[] ss = new string[0];
    s = this.Aggregate<string>((IEnumerable<string>)ss, (string)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void AggregateThrowsArgumentNullException820()
{
    string s;
    string[] ss = new string[0];
    s = this.Aggregate<string>((IEnumerable<string>)ss, "", (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void Aggregate878()
{
    string s;
    string[] ss = new string[0];
    s = this.Aggregate<string>((IEnumerable<string>)ss, "", "");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void Aggregate416()
{
    string s;
    string[] ss = new string[1];
    s = this.Aggregate<string>((IEnumerable<string>)ss, "", "");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void Aggregate234()
{
    string s;
    string[] ss = new string[2];
    s = this.Aggregate<string>((IEnumerable<string>)ss, "", "");
    Assert.AreEqual<string>("", s);
}
}

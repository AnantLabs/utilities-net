// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

public partial class GenericEnumerableExtensionsTest
{
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void SkipLastThrowsArgumentNullException427()
{
    IEnumerable<int> iEnumerable;
    iEnumerable = this.SkipLast<int>((IEnumerable<int>)null, 0);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void SkipLast763()
{
    IEnumerable<int> iEnumerable;
    int[] ints = new int[0];
    iEnumerable = this.SkipLast<int>((IEnumerable<int>)ints, 0);
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void SkipLast812()
{
    IEnumerable<int> iEnumerable;
    int[] ints = new int[0];
    iEnumerable = this.SkipLast<int>((IEnumerable<int>)ints, int.MinValue);
    Assert.IsNotNull((object)iEnumerable);
}
[TestMethod]
[PexGeneratedBy(typeof(global::GenericEnumerableExtensionsTest))]
public void SkipLast549()
{
    IEnumerable<int> iEnumerable;
    int[] ints = new int[0];
    iEnumerable = this.SkipLast<int>((IEnumerable<int>)ints, 512);
    Assert.IsNotNull((object)iEnumerable);
}
}
